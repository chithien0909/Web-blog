{"ast":null,"code":"var _jsxFileName = \"/home/chithien0909/Documents/web-blog/display/src/Components/Login/Login.js\";\nimport React, { Component } from 'react';\nimport './Login.css';\nimport { Input, Button, Icon, Form } from 'antd/lib/index';\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputOnChange = e => {\n      // this.setState({\n      //\n      // })\n      console.log(\"Change\");\n    };\n\n    this.handleLoginSubmit = e => {\n      e.preventDefault();\n      console.log(\"Submit\");\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldsError = _this$props$form.getFieldsError,\n          getFieldError = _this$props$form.getFieldError,\n          isFieldTouched = _this$props$form.isFieldTouched; // Only show error after a field is touched.\n\n    const usernameError = isFieldTouched('username') && getFieldError('username');\n    const passwordError = isFieldTouched('password') && getFieldError('password');\n    return React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Form, {\n      className: \"form-input\",\n      layout: \"inline\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), \", )}\"), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), \", )}\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/chithien0909/Documents/web-blog/display/src/Components/Login/Login.js"],"names":["React","Component","Input","Button","Icon","Form","hasErrors","fieldsError","Object","keys","some","field","Login","constructor","props","handleInputOnChange","e","console","log","handleLoginSubmit","preventDefault","handleSubmit","form","validateFields","err","values","state","email","password","render","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","usernameError","passwordError","color"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './Login.css'\nimport {Input,Button, Icon, Form} from 'antd/lib/index';\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass Login extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n    handleInputOnChange = (e) =>{\n        // this.setState({\n        //\n        // })\n        console.log(\"Change\");\n    };\n    handleLoginSubmit = e =>{\n        e.preventDefault();\n        console.log(\"Submit\");\n    };\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\n\n        // Only show error after a field is touched.\n        const usernameError = isFieldTouched('username') && getFieldError('username');\n        const passwordError = isFieldTouched('password') && getFieldError('password');\n        return (\n            <div className='Login'>\n                <Form className='form-input' layout=\"inline\" onSubmit={this.handleSubmit}>\n                    <Form.Item>\n                            <Input\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                placeholder=\"Username\"\n                            />,\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                            <Input\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />,\n                        )}\n                    </Form.Item>\n                </Form>\n            </div>\n        )\n    }\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}